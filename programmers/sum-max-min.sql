-- L1. 가장 비싼 상품 구하기
SELECT MAX(PRICE) AS MAX_PRICE
FROM PRODUCT;


-- L1. 최댓값 구하기
SELECT MAX(DATETIME) AS RECENT_TIME
FROM ANIMAL_INS
LIMIT 1


-- L1. 잡은 물고기 중 가장 큰 물고기의 길이 구하기
SELECT CONCAT(MAX(LENGTH), "cm") AS MAX_LENGTH
FROM FISH_INFO


-- L2. 가격이 제일 비싼 식품의 정보 출력하기
WITH CTE AS (
    SELECT MAX(PRICE) AS MAX_PRICE
    FROM FOOD_PRODUCT
    LIMIT 1
)

SELECT
    PRODUCT_ID,
    PRODUCT_NAME,
    PRODUCT_CD,
    CATEGORY,
    PRICE
FROM FOOD_PRODUCT, CTE
WHERE PRICE = CTE.MAX_PRICE;


-- L2. 최솟값 구하기
SELECT MIN(DATETIME) AS OLDEST_TIME
FROM ANIMAL_INS
LIMIT 1;


-- L2. 동물 수 구하기
SELECT COUNT(*)
FROM ANIMAL_INS;


-- L2. 중복 제거하기
SELECT COUNT(DISTINCT NAME)
FROM ANIMAL_INS
WHERE NAME IS NOT NULL;


-- L2. 조건에 맞는 아이템들의 가격의 총합 구하기
SELECT SUM(PRICE) AS TOTAL_PRICE
FROM ITEM_INFO
WHERE RARITY = "LEGEND";


-- L2. 연도별 대장균 크기의 편차 구하기
WITH CTE AS (
    SELECT
        YEAR(DIFFERENTIATION_DATE) AS YEAR,
        MAX(SIZE_OF_COLONY) AS MAX_SIZE
    FROM ECOLI_DATA
    GROUP BY YEAR
)

SELECT
    C.YEAR,
    C.MAX_SIZE - E.SIZE_OF_COLONY AS YEAR_DEV,
    E.ID
FROM CTE C
INNER JOIN ECOLI_DATA E
    ON YEAR(E.DIFFERENTIATION_DATE) = C.YEAR
WHERE YEAR(E.DIFFERENTIATION_DATE) = C.YEAR
ORDER BY YEAR, YEAR_DEV;


-- L3. 물고기 종류 별 대어 찾기
WITH CTE AS (
    SELECT
        FISH_TYPE,
        FISH_NAME,
        MAX(LENGTH) AS LENGTH
    FROM FISH_INFO
    NATURAL JOIN FISH_NAME_INFO
    GROUP BY FISH_TYPE, FISH_NAME
)

SELECT
    ID,
    FISH_NAME,
    LENGTH
FROM FISH_INFO 
NATURAL JOIN CTE;