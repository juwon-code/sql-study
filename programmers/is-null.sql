-- L1. 경기도에 위치한 식품창고 목록 출력하기
SELECT
    WAREHOUSE_ID,
    WAREHOUSE_NAME,
    ADDRESS,
    CASE WHEN FREEZER_YN IS NULL
        THEN "N"
    ELSE FREEZER_YN
    END AS FREEZER_YN
FROM FOOD_WAREHOUSE
WHERE SUBSTR(ADDRESS, 1, 3) = "경기도"
ORDER BY WAREHOUSE_ID;


-- L1. 이름이 없는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NULL
ORDER BY ANIMAL_ID;


-- L1. 이름이 있는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
ORDER BY ANIMAL_ID;


-- L1. 나이 정보가 없는 회원 수 구하기
SELECT COUNT(*) AS USERS
FROM USER_INFO
WHERE AGE IS NULL;


-- L1. 잡은 물고기의 평균 길이 구하기
WITH CTE_LENGTH AS (
    SELECT
        CASE WHEN LENGTH < 10 OR LENGTH IS NULL
            THEN "10"
        ELSE 
            LENGTH
        END AS LENGTH
    FROM FISH_INFO
)

SELECT ROUND(AVG(LENGTH), 2) AS AVERAGE_LENGTH
FROM CTE_LENGTH;


-- L2. NULL 처리하기
SELECT
    ANIMAL_TYPE,
    CASE WHEN NAME IS NULL 
        THEN "No name"
    ELSE NAME
    END AS NAME,
    SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;


-- L2. ROOT 아이템 구하기
SELECT
    I.ITEM_ID,
    I.ITEM_NAME
FROM ITEM_INFO I 
INNER JOIN ITEM_TREE T
    ON I.ITEM_ID = T.ITEM_ID
WHERE T.PARENT_ITEM_ID IS NULL
ORDER BY ITEM_ID;


-- L3. 업그레이드 할 수 없는 아이템 구하기
SELECT
    I.ITEM_ID,
    I.ITEM_NAME,
    I.RARITY
FROM ITEM_INFO I
LEFT JOIN ITEM_TREE T
    ON I.ITEM_ID = T.PARENT_ITEM_ID
WHERE T.PARENT_ITEM_ID IS NULL
ORDER BY I.ITEM_ID DESC;